#!/bin/bash
source $(dirname $0)/solr.conf.inc
source $(dirname $0)/misc.inc

DATA_DIR="./data"

FAST_CHECK=1
USE_MISS=0

OPWD=$(pwd)
SKIP_FILE="solr-import.skip"
MISS_FILE="solr-import.miss"
USE_SKIP=0
DIR_DEPTH=4

setEnv() {
	SOLR_CORE=$1
	URL_BASE="127.0.0.1:${SOLR_PORT}/solr/${SOLR_CORE}"
	URL_UPDATE="${URL_BASE}/clef/import?optimize=false&clean=false&commit=false&verbose=false&entity=clef-IP-XSL&command=full-import&path="
	URL_STATUS="${URL_BASE}/clef/import"
}

process() {
	if [ $USE_MISS == 1 ]; then
		printf "Using missing files list ${OPWD}/${MISS_FILE}.${1}\n"
		while read DIR; do
			local SUBMIT_DIR=${DIR/\.\//}
			printf "["
			until (curl -silent http://${URL_STATUS}?command=status | grep -o busy | [[ $(wc -l) == 0 ]] && curl -silent http://${URL_UPDATE}${SUBMIT_DIR} > /dev/null); do
				printf "-"
				sleep 0.5s
			done;
			local RC=$?
			if [ $RC == 0 ]; then
				printf "+"   
			fi;
			printf "]"
		done < "${OPWD}/${MISS_FILE}.${1}"
	else

	find ./${1} -mindepth ${DIR_DEPTH} -maxdepth ${DIR_DEPTH} -type d -print0 | while IFS= read -r -d $'\0' DIR; do
		local SKIP=0

		if [ $USE_SKIP == 1 ]; then
			# directory in skip file?
			grep -i "${DIR}/" "${OPWD}/${SKIP_FILE}" > /dev/null
			local RC=$?

			# directory in skip file, check single files
			if [ $RC == 0 ]; then
				local SKIP=1
				if [ $FAST_CHECK != 1 ]; then
					# get all files in target dir
					for file in ${OPWD}/${DATA_DIR}/${DIR}/*.xml; do
						local FILE=${file##*/}
						# check if file in skip file
						grep -i "${DIR}/${FILE}" "${OPWD}/${SKIP_FILE}" > /dev/null
						local RC=$?
						# file not in skip file, needs reindexing
						if [ $RC != 0 ] ; then
							local SKIP=0
							break
						fi;
					done;
				fi;
			fi; # dir in skip
		fi; # use skip

		if [ $SKIP == 1 ]; then
			# skip directory, all files are there
			printf "."
		else
			local SUBMIT_DIR=${DIR/\.\//}
			printf "["
			until (curl -silent http://${URL_STATUS}?command=status | grep -o busy | [[ $(wc -l) == 0 ]] && curl -silent http://${URL_UPDATE}${SUBMIT_DIR} > /dev/null); do
				printf "-"
				sleep 0.1s
			done;
			local RC=$?
			if [ $RC == 0 ]; then
				printf "+"
			fi;
			printf "]"
		fi;
	done

	fi;
}

# check log
#if [ -f "${OPWD}/solr/${SOLR_PATH}/example/logs/solr.log" ]; then
#	printf "Remove SOLR logfile at ${OPWD}/solr/${SOLR_PATH}/example/logs/solr.log first?\n"
#	if confirm; then
#		mv ${OPWD}/solr/${SOLR_PATH}/example/logs/solr.log ${OPWD}/solr/${SOLR_PATH}/example/logs/solr.log.import-$(date "+%F%H%M%S").bak
#		touch ${OPWD}/solr/${SOLR_PATH}/example/logs/solr.log
#	fi
#else
#	touch ${OPWD}/solr/${SOLR_PATH}/example/logs/solr.log
#fi

cd ${DATA_DIR}

if [ $FAST_CHECK == 1 ]; then
	printf "Warn: Using fast-checks for directories.\n"
fi;

if [ -f "${OPWD}/${SKIP_FILE}" ]; then
	printf "Using skip file ${OPWD}/${SKIP_FILE}.\n"
	USE_SKIP=1
fi;

printf "Process ${DATA_DIR}/EP?\n"
if confirm; then
	setEnv EP
	process EP
	curl -silent http://${URL_UPDATE_COMMIT} > /dev/null
fi

printf "Process ${DATA_DIR}/WO?\n"
if confirm; then
	setEnv WO
	process WO
	curl -silent http://${URL_UPDATE_COMMIT} > /dev/null
fi
